#
# Torrent Mover Configuration Template
#
# INSTRUCTIONS:
# 1. Rename this file to "config.ini".
# 2. Fill in the details for your source and destination servers below.
# 3. You can rename the [SOURCE_CLIENT] and [DESTINATION_CLIENT] sections,
#    but make sure to update the names in the [SETTINGS] section to match.
# 4. Ensure all paths are absolute paths.
#

[SOURCE_CLIENT]
# Connection details for the SOURCE qBittorrent client (e.g., your seedbox).
host = https://source-qbittorrent.example.com
port = 443
username = your_username
password = your_password
# Set to false if you use a self-signed certificate and understand the risks.
verify_cert = True

[DESTINATION_CLIENT]
# Connection details for the DESTINATION qBittorrent client (e.g., your home server).
host = https://destination-qbittorrent.example.com
port = 443
username = your_username
password = your_password
# Set to false if you use a self-signed certificate and understand the risks.
verify_cert = True

[SOURCE_SERVER]
# Connection details for the SOURCE server where the files are stored.
# This is typically the same machine as the source qBittorrent client.
host = source-server.example.com
port = 22
username = your_sftp_username
password = your_sftp_password

[DESTINATION_SERVER]
# (Optional) Connection details for the DESTINATION server.
# Required only if using 'sftp_upload' transfer mode.
# If omitted, transfers will be downloaded to the machine running this script.
host = destination-server.example.com
port = 22
username = your_sftp_username
password = your_sftp_password

[DESTINATION_PATHS]
# The absolute path where torrent data will be moved.
# - For 'rsync' and 'sftp' modes, this is a LOCAL path on the machine running the script.
# - For 'sftp_upload' mode, this is a REMOTE path on the DESTINATION_SERVER.
destination_path = /path/to/your/downloads
# (Optional) The path that the DESTINATION qBittorrent client uses to see the data.
# Use this if qBittorrent is running in a Docker container with different path mappings.
# If left blank, it will default to the 'destination_path' value above.
# Example: If your downloads are at /mnt/data/downloads on the host, but the container
# sees this as /downloads, you would set remote_destination_path=/downloads
remote_destination_path =

[SETTINGS]
# The names of the sections above that define your qBittorrent clients.
# These must match the section names you use for your clients.
source_client_section = SOURCE_CLIENT
destination_client_section = DESTINATION_CLIENT

# The category in the SOURCE qBittorrent client that marks torrents for moving.
category_to_move = move-me
# (Optional) The desired total size in GB for the category after moving.
# If set, the script will only move the oldest torrents until the category's
# total size is at or below this threshold.
# Leave blank to move all completed torrents in the category.
size_threshold_gb =
# The transfer mode to use. Options: sftp, rsync, sftp_upload.
# - sftp: Downloads files from the source server to this machine via SFTP.
# - rsync: Downloads files from the source server to this machine via rsync (faster).
# - sftp_upload: Transfers files directly from the source server to the destination server via SFTP.
transfer_mode = rsync
# The maximum number of files to transfer simultaneously within a single torrent job.
# This applies to the 'sftp' and 'sftp_upload' modes.
max_concurrent_file_transfers = 5
# (Optional) The maximum number of concurrent SSH sessions to use for remote operations (like calculating directory sizes).
# A lower number can help prevent "Secsh channel open FAILED" errors on some SSH servers.
# It is recommended to keep this value at or below your SSH server's 'MaxSessions' setting (often 10).
max_concurrent_ssh_sessions = 8
# (Optional) For 'sftp_upload' mode, download the file to a local temporary location before uploading.
# This can be useful on systems with low memory to avoid potential buffering issues with Paramiko,
# at the cost of requiring local disk space for the transfer. The local download does not
# count towards the 'max_concurrent_file_transfers' limit.
local_cache_sftp_upload = False