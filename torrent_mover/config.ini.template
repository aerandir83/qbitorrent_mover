#
# Torrent Mover Configuration Template
#
# INSTRUCTIONS:
# 1. Rename this file to "config.ini".
# 2. Fill in the details for your source and destination servers below.
# 3. You can rename the [SOURCE_CLIENT] and [DESTINATION_CLIENT] sections,
#    but make sure to update the names in the [SETTINGS] section to match.
# 4. Ensure all paths are absolute paths.
#
# PASSWORD ENCRYPTION (RECOMMENDED):
# For security, you can encrypt the passwords in this file.
#   a. Fill in your plaintext passwords below.
#   b. Save the file.
#   c. Run the script with the --encrypt-config flag:
#      python3 torrent_mover.py --encrypt-config
#   d. The script will prompt you to create a master password. This password
#      will be required every time you run the script.
#   e. Your passwords in this file will be replaced with encrypted strings.
#

[SOURCE_CLIENT]
# Connection details for the SOURCE qBittorrent client (e.g., your seedbox).
host = https://source-qbittorrent.example.com
port = 443
username = your_username
password = your_password
# Set to false if you use a self-signed certificate and understand the risks.
verify_cert = True

[DESTINATION_CLIENT]
# Connection details for the DESTINATION qBittorrent client (e.g., your home server).
host = https://destination-qbittorrent.example.com
port = 443
username = your_username
password = your_password
# Set to false if you use a self-signed certificate and understand the risks.
verify_cert = True

[SOURCE_SERVER]
# Connection details for the SOURCE server where the files are stored.
# This is typically the same machine as the source qBittorrent client.
host = source-server.example.com
port = 22
username = your_sftp_username
password = your_sftp_password

[DESTINATION_PATHS]
# The absolute path on the DESTINATION server where the torrent data will be moved to.
# This is the local path where the script will write the files.
destination_path = /path/to/your/downloads
# (Optional) The path that the DESTINATION qBittorrent client uses to see the data.
# Use this if qBittorrent is running in a Docker container with different path mappings.
# If left blank, it will default to the 'destination_path' value above.
# Example: If your downloads are at /mnt/data/downloads on the host, but the container
# sees this as /downloads, you would set remote_destination_path=/downloads
remote_destination_path =

[SETTINGS]
# The names of the sections above that define your qBittorrent clients.
# These must match the section names you use for your clients.
source_client_section = SOURCE_CLIENT
destination_client_section = DESTINATION_CLIENT

# The category in the SOURCE qBittorrent client that marks torrents for moving.
category_to_move = move-me
# (Optional) The desired total size in GB for the category after moving.
# If set, the script will only move the oldest torrents until the category's
# total size is at or below this threshold.
# Leave blank to move all completed torrents in the category.
size_threshold_gb =
# The transfer mode to use. Options: sftp, rsync.
# rsync mode is generally faster but requires 'sshpass' to be installed on the
# system running this script.
transfer_mode = rsync